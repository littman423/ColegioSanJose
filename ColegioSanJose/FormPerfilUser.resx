<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>