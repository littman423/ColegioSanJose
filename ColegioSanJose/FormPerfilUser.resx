<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>